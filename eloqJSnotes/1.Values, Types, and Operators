BITS: ANY KIND OF 2 VALUED THINGS (ZEROS AND ONES) BINARY NUMBER
====

     NUMBER 13 IN BITS:
          0   0  0  0 1 1 0 1
          128 64 32 16 8 4 2 1
    
          00001101 EQUALS 13


SIX BASIC TYPES OF VALUE IN JAVASCRIPT
======================================

     STRINGS
     BOOLEANS
     OBJECTS
     FUNCTIONS
     UNDEFINED VALUES
     
     
NUMBERS => ARE NUMERIC VALUES  . EX: 13
=======

     JAVASCRIPT USES USES A FIXED NUMBER OF BITS (64 BITS) TO STORE A SINGLE NUMBER VALUE

     3 TYPES OF SPECIAL NUMBERS/ VALUES IN JAVASCRIPT:
          +    INFINITY
          +    -INFINITY
          +    NAN



STRINGS => USED TO REPRESENT TEXT
=======

     +    ALMOST ANYTHING CAN BE PUT BETWEEN STRINGS
     +    BACKSLASH TO ESCAPE (\)
     +    \n IS A NEW LINE
     +    2 BACKSLASHES IS AN ACTUAL BACKSLASH
     +    YOU CAN CONCATENATE STRINGS USING +  . THAT'S ABOUT IT.
     

UNARY OPERATORS
===============

     +    NOT ALL OPERATORS ARE SYMBOLS LIKE + OR -    (SOME ARE WRITTEN WORDS)
     +    typeof OPERATOR 
               typeof(4) => number
               type("x") => string
               typeof TAKES ONLY ONE VALUE. OPERATORS THAT USE TWO VALUES ARE CALLED BYNARY OPERATORS

     
BOOLEAN VALUES
==============

     +    THEY HAVE TWO VALUES : TRUE AND FALSE   
               EX. 
                    console.log( 3 > 2);
                    // -> true
          
          +    STRINGS CAN BE COMPARED AS WELL
               "Z" < "a" is true
                    +    UPPERCASE LETTERS ARE ALWAYS LESS THAN LOWERCASE ONES
                    
     +    THERE IS ONLY ONE VALUE IN JAVASCRIPT THAT IS NOT EQUAL TO ITSELF => NaN
               EX.
                    console.log(NaN == NaN)
                    // =>     false
                    

LOGICAL OPERATORS
=================

     THESE ARE OPERATORS THAT CAN BE APPLIED TO BOOLEANS: AND, OR AND NOT
          +    &&   TRUE IF BOTH VALUES ARE TRUE
          +    ||   IT PRODUCES TRUE IF EITHER OF THE VALUES IS TRUE
          +    !    IT'S A UNARY OPERATOR THAT FLIPS THE VALUE GIVEN TO IT
          +    TERNARY OPERATOR (CONDITIONAL OPERATOR)
                    * THE VALUE ON THE LEFT OF QUESTION MARK PICKS WHICH OF THE OTHER TWO VALUE WILL COME OUT.
                      IF TRUE ONE ON LEFT AND IS FALSE THE ONE ON RIGHT
                      EX.
                         console.log(true ? 1 : 2);
                         // -> 1

UNDEFINED VALUES
================

     +    TWO VALUES: NULL AND UNDEFINED



